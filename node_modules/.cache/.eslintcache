[{"C:\\Aks\\projects\\student-records\\src\\index.js":"1","C:\\Aks\\projects\\student-records\\src\\reportWebVitals.js":"2","C:\\Aks\\projects\\student-records\\src\\App.js":"3","C:\\Aks\\projects\\student-records\\src\\components\\SRPage\\StudentRecordPage.js":"4","C:\\Aks\\projects\\student-records\\src\\components\\SRForm\\StudentRecordForm.js":"5","C:\\Aks\\projects\\student-records\\src\\components\\useForm.js":"6","C:\\Aks\\projects\\student-records\\src\\components\\controls\\Input.js":"7","C:\\Aks\\projects\\student-records\\src\\components\\controls\\Button.js":"8","C:\\Aks\\projects\\student-records\\src\\components\\controls\\ActionButton.js":"9","C:\\Aks\\projects\\student-records\\src\\components\\Popup.js":"10","C:\\Aks\\projects\\student-records\\src\\components\\ConfirmDialog.js":"11","C:\\Aks\\projects\\student-records\\src\\services\\studentARecordService.js":"12","C:\\Aks\\projects\\student-records\\src\\components\\SRList\\StudentRecordList.js":"13","C:\\Aks\\projects\\Final\\student-records\\src\\index.js":"14","C:\\Aks\\projects\\Final\\student-records\\src\\components\\SRPage\\StudentRecordPage.js":"15","C:\\Aks\\projects\\Final\\student-records\\src\\services\\studentARecordService.js":"16","C:\\Aks\\projects\\Final\\student-records\\src\\components\\SRForm\\StudentRecordForm.js":"17","C:\\Aks\\projects\\Final\\student-records\\src\\components\\SRList\\StudentRecordList.js":"18","C:\\Aks\\projects\\Final\\student-records\\src\\components\\useForm.js":"19","C:\\Aks\\projects\\Final\\student-records\\src\\components\\Popup.js":"20","C:\\Aks\\projects\\Final\\student-records\\src\\components\\ConfirmDialog.js":"21","C:\\Aks\\projects\\Final\\student-records\\src\\components\\controls\\Button.js":"22","C:\\Aks\\projects\\Final\\student-records\\src\\components\\controls\\Input.js":"23","C:\\Aks\\projects\\Final\\student-records\\src\\components\\controls\\ActionButton.js":"24"},{"size":286,"mtime":1637731773139,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":529,"mtime":1637219568941,"results":"28","hashOfConfig":"26"},{"size":1367,"mtime":1637746017137,"results":"29","hashOfConfig":"26"},{"size":3213,"mtime":1637746035607,"results":"30","hashOfConfig":"26"},{"size":1193,"mtime":1637686749751,"results":"31","hashOfConfig":"26"},{"size":414,"mtime":1637649914584,"results":"32","hashOfConfig":"26"},{"size":446,"mtime":1637256262966,"results":"33","hashOfConfig":"26"},{"size":848,"mtime":1637305556667,"results":"34","hashOfConfig":"26"},{"size":963,"mtime":1637311573106,"results":"35","hashOfConfig":"26"},{"size":984,"mtime":1637318178610,"results":"36","hashOfConfig":"26"},{"size":1427,"mtime":1637728697406,"results":"37","hashOfConfig":"26"},{"size":4485,"mtime":1637746030779,"results":"38","hashOfConfig":"26"},{"size":286,"mtime":1637731773139,"results":"39","hashOfConfig":"40"},{"size":1466,"mtime":1637812154666,"results":"41","hashOfConfig":"40"},{"size":1427,"mtime":1637728697406,"results":"42","hashOfConfig":"40"},{"size":3213,"mtime":1637746035607,"results":"43","hashOfConfig":"40"},{"size":4423,"mtime":1637812127208,"results":"44","hashOfConfig":"40"},{"size":1193,"mtime":1637686749751,"results":"45","hashOfConfig":"40"},{"size":963,"mtime":1637311573106,"results":"46","hashOfConfig":"40"},{"size":984,"mtime":1637318178610,"results":"47","hashOfConfig":"40"},{"size":446,"mtime":1637256262966,"results":"48","hashOfConfig":"40"},{"size":414,"mtime":1637649914584,"results":"49","hashOfConfig":"40"},{"size":848,"mtime":1637305556667,"results":"50","hashOfConfig":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"67wnj1",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"10azf1m",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Aks\\projects\\student-records\\src\\index.js",[],"C:\\Aks\\projects\\student-records\\src\\reportWebVitals.js",[],"C:\\Aks\\projects\\student-records\\src\\App.js",[],["107","108"],"C:\\Aks\\projects\\student-records\\src\\components\\SRPage\\StudentRecordPage.js",["109"],"import { useState } from 'react';\r\nimport './StudentRecordPage.scss';\r\nimport '@material/react-layout-grid/index.scss';\r\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\r\nimport {Paper, makeStyles, Divider} from '@material-ui/core';\r\nimport StudentRecordForm from '../SRForm/StudentRecordForm';\r\nimport StudentRecordList from '../SRList/StudentRecordList';\r\nimport * as services from '../../services/studentARecordService'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    PageContent: {\r\n        width:'80%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3)\r\n    }\r\n}))\r\n\r\nconst StudentRecordPage = () => {\r\n    const classes = useStyles();\r\n\r\n    const saveStudentRecordHandler = (studentRecord) => {\r\n        services.insertStudentRecord(studentRecord);\r\n    }\r\n\r\n    return(\r\n        <Paper className={classes.PageContent}>\r\n            <p className=\"title\">Simple Student Records</p>\r\n            <Divider/>\r\n            <Grid>\r\n                <Row>\r\n                    <Cell columns={5}>\r\n                        <StudentRecordForm saveStudentRecord={saveStudentRecordHandler} />\r\n                    </Cell>\r\n                    <Cell columns={7}>\r\n                        <StudentRecordList />\r\n                    </Cell>\r\n                </Row>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default StudentRecordPage","C:\\Aks\\projects\\student-records\\src\\components\\SRForm\\StudentRecordForm.js",["110","111","112"],"import './StudentRecordForm.scss';\r\nimport {useForm, Form} from '../useForm';\r\nimport Input from '../controls/Input';\r\nimport Button from '../../components/controls/Button';\r\nimport { useEffect} from 'react';\r\n\r\nconst initializeFValues = {\r\n    fullName: '',\r\n    rollNo: '',\r\n    studentClass: '',\r\n    totalSubjects: '',\r\n    age: ''\r\n}\r\n\r\nconst StudentRecordForm = (props) => {\r\n    const {studentRecordForEdit} = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = {...errors}\r\n        if('fullName' in fieldValues)\r\n            temp.fullName= fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if('rollNo' in fieldValues)\r\n            temp.rollNo= fieldValues.rollNo ? \"\": \"This field is required.\"\r\n        if('studentClass' in fieldValues)\r\n            temp.studentClass= fieldValues.studentClass ? \"\": \"This field is required.\"\r\n        if('totalSubjects' in fieldValues)\r\n            temp.totalSubjects= fieldValues.totalSubjects ? \"\": \"This field is required.\"\r\n        if('age' in fieldValues)\r\n            temp.age= fieldValues.age ? \"\": \"This field is required.\"\r\n        \r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if(fieldValues == values)\r\n            return Object.values(temp).every(x=> x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        restForm\r\n    } = useForm(initializeFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if(validate()){\r\n            props.saveStudentRecord(values);\r\n            restForm();\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(studentRecordForEdit != null){\r\n                setValues({...studentRecordForEdit\r\n            })\r\n        }\r\n           \r\n    }, [studentRecordForEdit])\r\n\r\n    return(\r\n        <Form onSubmit = {handleSubmit}>\r\n            <Input\r\n                name= \"fullName\"\r\n                label= \"Full Name:\"\r\n                value= {values.fullName}\r\n                error= {errors.fullName}\r\n                onChange= {handleInputChange} />\r\n\r\n            <Input\r\n                name= \"rollNo\"\r\n                label= \"Rollno:\"\r\n                value= {values.rollNo}\r\n                error= {errors.rollNo}\r\n                onChange= {handleInputChange} />\r\n                \r\n            <Input\r\n                name= \"studentClass\"\r\n                label= \"Student Class:\"\r\n                value= {values.studentClass}\r\n                error= {errors.studentClass}\r\n                onChange= {handleInputChange} />\r\n\r\n            <Input\r\n                name= \"totalSubjects\"\r\n                label= \"Total Subjects:\"\r\n                value= {values.totalSubjects}\r\n                error= {errors.totalSubjects}\r\n                onChange= {handleInputChange} />\r\n\r\n            <Input\r\n                name= \"age\"\r\n                label= \"Age:\"\r\n                value= {values.age}\r\n                error= {errors.age}\r\n                onChange= {handleInputChange} />\r\n\r\n            <div>\r\n                <Button text = \"Submit\"  type=\"submit\" />\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default StudentRecordForm;","C:\\Aks\\projects\\student-records\\src\\components\\useForm.js",[],"C:\\Aks\\projects\\student-records\\src\\components\\controls\\Input.js",["113"],"import { TextField } from \"@material-ui/core\";\r\n\r\nexport default function(props){\r\n    const {name, label, value, error=null, onChange} = props;\r\n\r\n    return(\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...(error && {error:true, helperText:error})}\r\n        />\r\n       \r\n    )\r\n}",["114","115"],"C:\\Aks\\projects\\student-records\\src\\components\\controls\\Button.js",[],"C:\\Aks\\projects\\student-records\\src\\components\\controls\\ActionButton.js",[],"C:\\Aks\\projects\\student-records\\src\\components\\Popup.js",[],"C:\\Aks\\projects\\student-records\\src\\components\\ConfirmDialog.js",[],"C:\\Aks\\projects\\student-records\\src\\services\\studentARecordService.js",["116","117"],"const KEYS = {\r\n    studentRecords: 'studentRecords',\r\n    studentRecordId: 'studentRecordId'\r\n}\r\n\r\nexport const getAllStudentRecords = () => {\r\n   if(localStorage.getItem(KEYS.studentRecords) == null)\r\n        localStorage.setItem(KEYS.studentRecords, JSON.stringify([]))\r\n    \r\n    let records = JSON.parse(localStorage.getItem(KEYS.studentRecords))\r\n\r\n    return records;\r\n}\r\n\r\nexport const insertStudentRecord = (data) => {\r\n    let records = getAllStudentRecords()\r\n    data['id'] = generateStudentRecordId()\r\n    records.push(data)\r\n    localStorage.setItem(KEYS.studentRecords, JSON.stringify(records))\r\n}\r\n\r\nexport const updateStudentRecord = (data) => {\r\n    let records = getAllStudentRecords()\r\n    let recordIndex = records.findIndex(x => x.id == data.id)\r\n    records[recordIndex] = {...data}\r\n    localStorage.setItem(KEYS.studentRecords, JSON.stringify(records))\r\n}\r\n\r\nexport const deleteStudentRecord = (data) => {\r\n    let records = getAllStudentRecords()\r\n    records = records.filter(x => x.id != data.id)\r\n    localStorage.setItem(KEYS.studentRecords, JSON.stringify(records))\r\n}\r\n\r\nexport const generateStudentRecordId = () => {\r\n    if(localStorage.getItem(KEYS.studentRecordId) == null)\r\n        localStorage.setItem(KEYS.studentRecordId, '0')\r\n\r\n    let id = parseInt(localStorage.getItem(KEYS.studentRecordId))\r\n    localStorage.setItem(KEYS.studentRecordId, (++id).toString())\r\n    \r\n    return id;\r\n}","C:\\Aks\\projects\\student-records\\src\\components\\SRList\\StudentRecordList.js",["118","119","120"],"import { useState} from 'react';\r\nimport { Table, TableHead, TableBody, TableCell, TableRow, List } from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StudentRecordForm from '../SRForm/StudentRecordForm';\r\nimport Popup from '../Popup';\r\nimport ConfirmDialog from '../ConfirmDialog';\r\nimport ActionButton from '../../components/controls/ActionButton';\r\nimport * as services from '../../services/studentARecordService'\r\n\r\nconst StudentRecordList = () => {\r\n    const [openPopup, setOpenPopup] = useState(false);    \r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen:false, title:'', subTitle:''});\r\n    const [studentRecordForEdit, setStudentRecordForEdit] = useState(null);\r\n    const [newRecordAdded, setNewRecordAdded] = useState(false);\r\n\r\n    const openInPopup = (item) => {      \r\n        setStudentRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n    \r\n    const onDelete = studentRecord => {\r\n        setConfirmDialog({\r\n            ...confirmDialog, isOpen:false\r\n        })\r\n        handleRemoveItem(studentRecord);        \r\n    }\r\n    \r\n    const updateStudentRecordHandler = (studentRecord) => {\r\n        services.updateStudentRecord(studentRecord)\r\n        setOpenPopup(false)\r\n    }\r\n    \r\n    const handleRemoveItem = (studentRecord) => {\r\n        services.deleteStudentRecord(studentRecord)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>FullName</TableCell>\r\n                        <TableCell align=\"right\">Roll No.</TableCell>\r\n                        <TableCell align=\"right\">Student Class</TableCell>\r\n                        <TableCell align=\"right\">Total Subjects</TableCell>\r\n                        <TableCell align=\"right\">Age</TableCell>\r\n                        <TableCell> </TableCell>\r\n                        <TableCell> </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {services.getAllStudentRecords().map((row) => (\r\n                        <TableRow key={row.rollNo} sx={{ '&:last-child td, &:last-child th': { border: 0 } }} >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.fullName}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.rollNo}</TableCell>\r\n                            <TableCell align=\"right\">{row.studentClass}</TableCell>\r\n                            <TableCell align=\"right\">{row.totalSubjects}</TableCell>\r\n                            <TableCell align=\"right\">{row.age}</TableCell>\r\n                            <TableCell>\r\n                                <ActionButton\r\n                                    color = \"primary\"\r\n                                    onClick = {() => openInPopup(row)} >\r\n                                    <EditOutlinedIcon fontSize=\"small\"/>\r\n                                </ActionButton>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                <ActionButton\r\n                                    color = \"secondary\"\r\n                                    onClick={()=> {setConfirmDialog({\r\n                                        isOpen:true,\r\n                                        title:\"Delete Student Record\",\r\n                                        subTitle:\"Do you want to delete Student Record?\",\r\n                                        onConfirm:()=>{onDelete(row)}\r\n                                    })}}>\r\n                                    <CloseIcon fontSize=\"small\"/>\r\n                                </ActionButton>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n            <Popup title=\"Edit Student Record\" \r\n                    openPopup = {openPopup} \r\n                    setOpenPopup = {setOpenPopup} >\r\n                <StudentRecordForm saveStudentRecord={updateStudentRecordHandler}\r\n                                studentRecordForEdit={studentRecordForEdit} />\r\n            </Popup>\r\n            <ConfirmDialog confirmDialog= {confirmDialog}\r\n                            setConfirmDialog= {setConfirmDialog}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentRecordList","C:\\Aks\\projects\\Final\\student-records\\src\\index.js",[],["121","122"],"C:\\Aks\\projects\\Final\\student-records\\src\\components\\SRPage\\StudentRecordPage.js",["123"],"C:\\Aks\\projects\\Final\\student-records\\src\\services\\studentARecordService.js",["124","125"],"C:\\Aks\\projects\\Final\\student-records\\src\\components\\SRForm\\StudentRecordForm.js",["126","127","128"],"C:\\Aks\\projects\\Final\\student-records\\src\\components\\SRList\\StudentRecordList.js",["129"],"C:\\Aks\\projects\\Final\\student-records\\src\\components\\useForm.js",[],"C:\\Aks\\projects\\Final\\student-records\\src\\components\\Popup.js",[],"C:\\Aks\\projects\\Final\\student-records\\src\\components\\ConfirmDialog.js",[],"C:\\Aks\\projects\\Final\\student-records\\src\\components\\controls\\Button.js",[],"C:\\Aks\\projects\\Final\\student-records\\src\\components\\controls\\Input.js",["130"],"C:\\Aks\\projects\\Final\\student-records\\src\\components\\controls\\ActionButton.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":35,"column":24,"nodeType":"141","messageId":"142","endLine":35,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":36,"column":52,"nodeType":"141","messageId":"142","endLine":36,"endColumn":54},{"ruleId":"143","severity":1,"message":"144","line":63,"column":8,"nodeType":"145","endLine":63,"endColumn":30,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":3,"column":1,"nodeType":"149","endLine":17,"endColumn":2},{"ruleId":"131","replacedBy":"150"},{"ruleId":"133","replacedBy":"151"},{"ruleId":"139","severity":1,"message":"140","line":24,"column":51,"nodeType":"141","messageId":"142","endLine":24,"endColumn":53},{"ruleId":"139","severity":1,"message":"152","line":31,"column":40,"nodeType":"141","messageId":"142","endLine":31,"endColumn":42},{"ruleId":"135","severity":1,"message":"153","line":2,"column":60,"nodeType":"137","messageId":"138","endLine":2,"endColumn":64},{"ruleId":"135","severity":1,"message":"154","line":15,"column":12,"nodeType":"137","messageId":"138","endLine":15,"endColumn":26},{"ruleId":"135","severity":1,"message":"155","line":15,"column":28,"nodeType":"137","messageId":"138","endLine":15,"endColumn":45},{"ruleId":"131","replacedBy":"156"},{"ruleId":"133","replacedBy":"157"},{"ruleId":"135","severity":1,"message":"154","line":20,"column":12,"nodeType":"137","messageId":"138","endLine":20,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":24,"column":51,"nodeType":"141","messageId":"142","endLine":24,"endColumn":53},{"ruleId":"139","severity":1,"message":"152","line":31,"column":40,"nodeType":"141","messageId":"142","endLine":31,"endColumn":42},{"ruleId":"139","severity":1,"message":"140","line":35,"column":24,"nodeType":"141","messageId":"142","endLine":35,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":36,"column":52,"nodeType":"141","messageId":"142","endLine":36,"endColumn":54},{"ruleId":"143","severity":1,"message":"144","line":63,"column":8,"nodeType":"145","endLine":63,"endColumn":30,"suggestions":"158"},{"ruleId":"135","severity":1,"message":"153","line":2,"column":60,"nodeType":"137","messageId":"138","endLine":2,"endColumn":64},{"ruleId":"147","severity":1,"message":"148","line":3,"column":1,"nodeType":"149","endLine":17,"endColumn":2},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["161"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["159"],["160"],"Expected '!==' and instead saw '!='.","'List' is defined but never used.","'newRecordAdded' is assigned a value but never used.","'setNewRecordAdded' is assigned a value but never used.",["159"],["160"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"163","fix":"165"},"Update the dependencies array to be: [setValues, studentRecordForEdit]",{"range":"166","text":"167"},{"range":"168","text":"167"},[1814,1836],"[setValues, studentRecordForEdit]",[1814,1836]]