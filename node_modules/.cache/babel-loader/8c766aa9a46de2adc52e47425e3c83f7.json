{"ast":null,"code":"var _jsxFileName = \"C:\\\\Aks\\\\projects\\\\student-records\\\\src\\\\components\\\\SRPage\\\\StudentRecordPage.js\",\n    _s = $RefreshSig$();\n\nimport './StudentRecordPage.scss';\nimport '@material/react-layout-grid/index.scss';\nimport { useState } from 'react';\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\nimport { Table, TableHead, TableBody, TableCell, TableRow, List } from '@material-ui/core';\nimport { Paper, makeStyles, Divider } from '@material-ui/core';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport StudentRecordForm from '../SRForm/StudentRecordForm';\nimport ActionButton from '../../components/controls/ActionButton';\nimport Popup from '../Popup';\nimport ConfirmDialog from '../ConfirmDialog';\nimport { Provider } from 'react';\nimport { connect } from 'react-redux';\nimport store from '../../redux/store';\nimport { buyCake } from '../../redux/cake/cakeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  PageContent: {\n    width: '80%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction StudentRecordPage(props) {\n  _s();\n\n  const classes = useStyles();\n  const [records, setRecords] = useState([]);\n  const [studentRecordForEdit, setStudentRecordForEdit] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n\n  const openInPopup = item => {\n    setStudentRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const onDelete = id => {\n    setConfirmDialog({ ...confirmDialog,\n      isOpen: false\n    });\n    handleRemoveItem(id);\n  };\n\n  const saveStudentRecordHandler = studentRecord => {\n    setRecords([...records, studentRecord]);\n  };\n\n  const updateStudentRecordHandler = studentRecord => {\n    let newArr = [...records];\n    let index = records.findIndex(x => x.rollNo === studentRecord.rollNo);\n    newArr[index] = studentRecord;\n    setRecords(newArr);\n    setOpenPopup(false);\n  };\n\n  const handleRemoveItem = id => {\n    setRecords(records.filter(item => item.rollNo !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.PageContent,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"title\",\n        children: \"Simple Student Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Number of cakes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Buy Cake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Cell, {\n            columns: 5,\n            children: /*#__PURE__*/_jsxDEV(StudentRecordForm, {\n              saveStudentRecord: saveStudentRecordHandler,\n              studentRecordForEdit: studentRecordForEdit,\n              source: \"newRecord\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Cell, {\n            columns: 7,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Table, {\n                size: \"small\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"FullName\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Roll No.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Student Class\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Total Subjects\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Age\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \" \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \" \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: records.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                    sx: {\n                      '&:last-child td, &:last-child th': {\n                        border: 0\n                      }\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      children: row.fullName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.rollNo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.studentClass\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.totalSubjects\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.age\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(ActionButton, {\n                        color: \"primary\",\n                        onClick: () => openInPopup(row),\n                        children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 104,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(ActionButton, {\n                        color: \"secondary\",\n                        onClick: () => {\n                          setConfirmDialog({\n                            isOpen: true,\n                            title: \"Delete Student Record\",\n                            subTitle: \"Do you want to delete Student Record?\",\n                            onConfirm: () => {\n                              onDelete(row.rollNo);\n                            }\n                          });\n                        },\n                        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 116,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 45\n                    }, this)]\n                  }, row.rollNo, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 41\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Popup, {\n                title: \"Edit Student Record\",\n                openPopup: openPopup,\n                setOpenPopup: setOpenPopup,\n                children: /*#__PURE__*/_jsxDEV(StudentRecordForm, {\n                  saveStudentRecord: updateStudentRecordHandler,\n                  studentRecordForEdit: studentRecordForEdit,\n                  source: \"editRecord\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n                confirmDialog: confirmDialog,\n                setConfirmDialog: setConfirmDialog\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n\n  const mapStateToProps = state => {\n    return {\n      numOfCakes: state.numOfCakes\n    };\n  };\n\n  const mapDispatchToProps = dispatch => {\n    return {\n      buyCake: () => dispatch(buyCake())\n    };\n  };\n}\n\n_s(StudentRecordPage, \"yCoL6ettKHVajzvKXEuG0pmGQ58=\", false, function () {\n  return [useStyles];\n});\n\n_c = StudentRecordPage;\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentRecordPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentRecordPage\");","map":{"version":3,"sources":["C:/Aks/projects/student-records/src/components/SRPage/StudentRecordPage.js"],"names":["useState","Cell","Grid","Row","Table","TableHead","TableBody","TableCell","TableRow","List","Paper","makeStyles","Divider","EditOutlinedIcon","CloseIcon","StudentRecordForm","ActionButton","Popup","ConfirmDialog","Provider","connect","store","buyCake","useStyles","theme","PageContent","width","margin","padding","spacing","StudentRecordPage","props","classes","records","setRecords","studentRecordForEdit","setStudentRecordForEdit","openPopup","setOpenPopup","confirmDialog","setConfirmDialog","isOpen","title","subTitle","openInPopup","item","onDelete","id","handleRemoveItem","saveStudentRecordHandler","studentRecord","updateStudentRecordHandler","newArr","index","findIndex","x","rollNo","filter","map","row","border","fullName","studentClass","totalSubjects","age","onConfirm","mapStateToProps","state","numOfCakes","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import './StudentRecordPage.scss';\r\nimport '@material/react-layout-grid/index.scss';\r\nimport { useState} from 'react';\r\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\r\nimport { Table, TableHead, TableBody, TableCell, TableRow, List } from '@material-ui/core';\r\nimport {Paper, makeStyles, Divider} from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StudentRecordForm from '../SRForm/StudentRecordForm';\r\nimport ActionButton from '../../components/controls/ActionButton';\r\nimport Popup from '../Popup';\r\nimport ConfirmDialog from '../ConfirmDialog';\r\n\r\nimport { Provider } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../redux/store'\r\nimport { buyCake } from '../../redux/cake/cakeActions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    PageContent: {\r\n        width:'80%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3)\r\n    }\r\n}))\r\n\r\nfunction StudentRecordPage(props){\r\n    const classes = useStyles();\r\n    const [records, setRecords] = useState([])\r\n    const [studentRecordForEdit, setStudentRecordForEdit] = useState(null);\r\n    const [openPopup, setOpenPopup] = useState(false);    \r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen:false, title:'', subTitle:''});\r\n\r\n    const openInPopup = (item) => {      \r\n        setStudentRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog, isOpen:false\r\n        })\r\n        handleRemoveItem(id);        \r\n    }\r\n\r\n    const saveStudentRecordHandler = (studentRecord) => {\r\n        setRecords([...records, studentRecord]);\r\n    }\r\n\r\n    const updateStudentRecordHandler = (studentRecord) => {\r\n        let newArr = [...records]\r\n        let index = records.findIndex(x => x.rollNo ===studentRecord.rollNo);\r\n        newArr[index] = studentRecord;\r\n        setRecords(newArr)\r\n        setOpenPopup(false)\r\n    }\r\n\r\n    const handleRemoveItem = (id) => {\r\n        setRecords(records.filter(item => item.rollNo !== id));\r\n    };\r\n\r\n    return(\r\n        <Provider store={store}>\r\n        <Paper className={classes.PageContent}>\r\n            <p className=\"title\">Simple Student Records</p>\r\n            <h2>Number of cakes</h2>\r\n            <button>Buy Cake</button>\r\n            <Divider/>\r\n            <Grid>\r\n                <Row>\r\n                    <Cell columns={5}>\r\n                        <StudentRecordForm saveStudentRecord={saveStudentRecordHandler}\r\n                                            studentRecordForEdit={studentRecordForEdit}\r\n                                            source=\"newRecord\" />\r\n                    </Cell>\r\n                    <Cell columns={7}>\r\n                        <div>\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>FullName</TableCell>\r\n                                        <TableCell align=\"right\">Roll No.</TableCell>\r\n                                        <TableCell align=\"right\">Student Class</TableCell>\r\n                                        <TableCell align=\"right\">Total Subjects</TableCell>\r\n                                        <TableCell align=\"right\">Age</TableCell>\r\n                                        <TableCell> </TableCell>\r\n                                        <TableCell> </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {records.map((row) => (\r\n                                        <TableRow key={row.rollNo} sx={{ '&:last-child td, &:last-child th': { border: 0 } }} >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {row.fullName}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.rollNo}</TableCell>\r\n                                            <TableCell align=\"right\">{row.studentClass}</TableCell>\r\n                                            <TableCell align=\"right\">{row.totalSubjects}</TableCell>\r\n                                            <TableCell align=\"right\">{row.age}</TableCell>\r\n                                            <TableCell>\r\n                                                <ActionButton\r\n                                                    color = \"primary\"\r\n                                                    onClick = {() => openInPopup(row)} >\r\n                                                    <EditOutlinedIcon fontSize=\"small\"/>\r\n                                                </ActionButton>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <ActionButton\r\n                                                    color = \"secondary\"\r\n                                                    onClick={()=> {setConfirmDialog({\r\n                                                        isOpen:true,\r\n                                                        title:\"Delete Student Record\",\r\n                                                        subTitle:\"Do you want to delete Student Record?\",\r\n                                                        onConfirm:()=>{onDelete(row.rollNo)}\r\n                                                    })}}>\r\n                                                    <CloseIcon fontSize=\"small\"/>\r\n                                                </ActionButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Popup title=\"Edit Student Record\" \r\n                                    openPopup = {openPopup} \r\n                                    setOpenPopup = {setOpenPopup} >\r\n                                <StudentRecordForm saveStudentRecord={updateStudentRecordHandler}\r\n                                                   studentRecordForEdit={studentRecordForEdit} \r\n                                                   source=\"editRecord\"/>\r\n                            </Popup>\r\n                            <ConfirmDialog confirmDialog= {confirmDialog}\r\n                                            setConfirmDialog= {setConfirmDialog}/>\r\n                        </div>\r\n                    </Cell>\r\n                </Row>\r\n            </Grid>\r\n            \r\n        </Paper>\r\n        </Provider>\r\n    )\r\n\r\n    const mapStateToProps = state => {\r\n        return {\r\n            numOfCakes: state.numOfCakes\r\n        }\r\n    }\r\n\r\n    const mapDispatchToProps = dispatch => { \r\n        return {\r\n            buyCake: () => dispatch(buyCake())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StudentRecordPage)"]},"metadata":{},"sourceType":"module"}