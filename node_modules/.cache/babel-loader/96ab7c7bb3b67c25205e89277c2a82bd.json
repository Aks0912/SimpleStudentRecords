{"ast":null,"code":"var _jsxFileName = \"C:\\\\Aks\\\\projects\\\\student-records\\\\src\\\\components\\\\SRPage\\\\StudentRecordPage.js\",\n    _s = $RefreshSig$();\n\nimport './StudentRecordPage.scss';\nimport '@material/react-layout-grid/index.scss';\nimport { useState } from 'react';\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\nimport { Table, TableHead, TableBody, TableCell, TableRow, List } from '@material-ui/core';\nimport { Paper, makeStyles, Divider } from '@material-ui/core';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport StudentRecordForm from '../SRForm/StudentRecordForm';\nimport StudentRecordList from '../SRList/StudentRecordList';\nimport ActionButton from '../../components/controls/ActionButton';\nimport Popup from '../Popup';\nimport ConfirmDialog from '../ConfirmDialog';\nimport * as services from '../../services/studentARecordService';\nimport { connect } from 'react-redux';\nimport { buyCake } from '../../redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  PageContent: {\n    width: '80%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  }\n}));\n\nconst StudentRecordPage = props => {\n  _s();\n\n  const classes = useStyles(); //const [records, setRecords] = useState([])\n\n  const [studentRecordForEdit, setStudentRecordForEdit] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n\n  const openInPopup = item => {\n    setStudentRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const onDelete = studentRecord => {\n    setConfirmDialog({ ...confirmDialog,\n      isOpen: false\n    });\n    handleRemoveItem(studentRecord);\n  };\n\n  const saveStudentRecordHandler = studentRecord => {\n    //setRecords([...records, studentRecord]);\n    services.insertStudentRecord(studentRecord);\n  };\n\n  const updateStudentRecordHandler = studentRecord => {\n    /* let newArr = [...records]\r\n    let index = records.findIndex(x => x.rollNo ===studentRecord.rollNo);\r\n    newArr[index] = studentRecord;\r\n    setRecords(newArr) */\n    services.updateStudentRecord(studentRecord);\n    setOpenPopup(false);\n  };\n\n  const handleRemoveItem = studentRecord => {\n    //setRecords(records.filter(item => item.rollNo !== id));\n    services.deleteStudentRecord(studentRecord);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.PageContent,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \"Simple Student Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Number of cakes - \", props.numOfCakes, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.buyCake,\n      children: \"Buy Cake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Cell, {\n          columns: 5,\n          children: /*#__PURE__*/_jsxDEV(StudentRecordForm, {\n            saveStudentRecord: saveStudentRecordHandler,\n            studentRecordForEdit: studentRecordForEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Cell, {\n          columns: 7,\n          children: /*#__PURE__*/_jsxDEV(StudentRecordList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StudentRecordPage, \"BZbF0iDfvxPjantSL5HdNp6CCJM=\", false, function () {\n  return [useStyles];\n});\n\n_c = StudentRecordPage;\n\nconst mapStateToProps = state => {\n  return {\n    numOfCakes: state.numOfCakes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    buyCake: () => dispatch(buyCake)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentRecordPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentRecordPage\");","map":{"version":3,"sources":["C:/Aks/projects/student-records/src/components/SRPage/StudentRecordPage.js"],"names":["useState","Cell","Grid","Row","Table","TableHead","TableBody","TableCell","TableRow","List","Paper","makeStyles","Divider","EditOutlinedIcon","CloseIcon","StudentRecordForm","StudentRecordList","ActionButton","Popup","ConfirmDialog","services","connect","buyCake","useStyles","theme","PageContent","width","margin","padding","spacing","StudentRecordPage","props","classes","studentRecordForEdit","setStudentRecordForEdit","openPopup","setOpenPopup","confirmDialog","setConfirmDialog","isOpen","title","subTitle","openInPopup","item","onDelete","studentRecord","handleRemoveItem","saveStudentRecordHandler","insertStudentRecord","updateStudentRecordHandler","updateStudentRecord","deleteStudentRecord","numOfCakes","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import './StudentRecordPage.scss';\r\nimport '@material/react-layout-grid/index.scss';\r\nimport { useState} from 'react';\r\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\r\nimport { Table, TableHead, TableBody, TableCell, TableRow, List } from '@material-ui/core';\r\nimport {Paper, makeStyles, Divider} from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StudentRecordForm from '../SRForm/StudentRecordForm';\r\nimport StudentRecordList from '../SRList/StudentRecordList';\r\nimport ActionButton from '../../components/controls/ActionButton';\r\nimport Popup from '../Popup';\r\nimport ConfirmDialog from '../ConfirmDialog';\r\nimport * as services from '../../services/studentARecordService'\r\n\r\nimport { connect } from 'react-redux';\r\nimport { buyCake } from '../../redux';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    PageContent: {\r\n        width:'80%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3)\r\n    }\r\n}))\r\n\r\nconst StudentRecordPage = (props) => {\r\n    const classes = useStyles();\r\n    //const [records, setRecords] = useState([])\r\n    const [studentRecordForEdit, setStudentRecordForEdit] = useState(null);\r\n    const [openPopup, setOpenPopup] = useState(false);    \r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen:false, title:'', subTitle:''});\r\n\r\n    const openInPopup = (item) => {      \r\n        setStudentRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = studentRecord => {\r\n        setConfirmDialog({\r\n            ...confirmDialog, isOpen:false\r\n        })\r\n        handleRemoveItem(studentRecord);        \r\n    }\r\n\r\n    const saveStudentRecordHandler = (studentRecord) => {\r\n        //setRecords([...records, studentRecord]);\r\n        services.insertStudentRecord(studentRecord);\r\n    }\r\n\r\n    const updateStudentRecordHandler = (studentRecord) => {\r\n        /* let newArr = [...records]\r\n        let index = records.findIndex(x => x.rollNo ===studentRecord.rollNo);\r\n        newArr[index] = studentRecord;\r\n        setRecords(newArr) */\r\n        services.updateStudentRecord(studentRecord)\r\n        setOpenPopup(false)\r\n    }\r\n\r\n    const handleRemoveItem = (studentRecord) => {\r\n        //setRecords(records.filter(item => item.rollNo !== id));\r\n        services.deleteStudentRecord(studentRecord)\r\n    };\r\n\r\n    return(\r\n        <Paper className={classes.PageContent}>\r\n            <p className=\"title\">Simple Student Records</p>\r\n            <h2>Number of cakes - {props.numOfCakes} </h2>\r\n            <button onClick={props.buyCake}>Buy Cake</button>\r\n            <Divider/>\r\n            <Grid>\r\n                <Row>\r\n                    <Cell columns={5}>\r\n                        <StudentRecordForm saveStudentRecord={saveStudentRecordHandler}\r\n                                            studentRecordForEdit={studentRecordForEdit} />\r\n                    </Cell>\r\n                    <Cell columns={7}>\r\n                        <StudentRecordList/>\r\n                    </Cell>\r\n                </Row>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        numOfCakes: state.numOfCakes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => { \r\n    return {\r\n        buyCake: () => dispatch(buyCake)\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StudentRecordPage)"]},"metadata":{},"sourceType":"module"}