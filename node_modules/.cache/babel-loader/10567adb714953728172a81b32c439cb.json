{"ast":null,"code":"const KEYS = {\n  studentRecords: 'studentRecords',\n  studentRecordId: 'studentRecordId'\n};\nexport const getAllStudentRecords = () => {\n  if (localStorage.getItem(KEYS.studentRecords) == null) localStorage.setItem(KEYS.studentRecords, JSON.stringify([]));\n  let records = JSON.parse(localStorage.getItem(KEYS.studentRecords));\n  return records;\n};\nexport const insertStudentRecord = data => {\n  console.log(\"data: \" + data);\n  let records = getAllStudentRecords();\n  data['id'] = generateStudentRecordId();\n  records.push(data);\n  console.log(\"records: \" + records);\n  localStorage.setItem(KEYS.studentRecords, JSON.stringify(records));\n};\nexport const updateStudentRecord = data => {\n  let records = getAllStudentRecords();\n  let recordIndex = records.findIndex(x => x.id == data.id);\n  records[recordIndex] = { ...data\n  };\n  localStorage.setItem(KEYS.studentRecords, JSON.stringify(records));\n};\nexport const deleteStudentRecord = id => {\n  let records = getAllStudentRecords();\n  records = records.filter(x => x.id != id);\n  localStorage.setItem(KEYS.studentRecords, JSON.stringify(records));\n};\nexport const generateStudentRecordId = () => {\n  if (localStorage.getItem(KEYS.studentRecordId) == null) localStorage.setItem(KEYS.studentRecordId, '0');\n  let id = parseInt(localStorage.getItem(KEYS.studentRecordId));\n  localStorage.setItem(KEYS.studentRecordId, (++id).toString());\n  return id;\n};","map":{"version":3,"sources":["C:/Aks/projects/student-records/src/services/studentARecordService.js"],"names":["KEYS","studentRecords","studentRecordId","getAllStudentRecords","localStorage","getItem","setItem","JSON","stringify","records","parse","insertStudentRecord","data","console","log","generateStudentRecordId","push","updateStudentRecord","recordIndex","findIndex","x","id","deleteStudentRecord","filter","parseInt","toString"],"mappings":"AAAA,MAAMA,IAAI,GAAG;AACTC,EAAAA,cAAc,EAAE,gBADP;AAETC,EAAAA,eAAe,EAAE;AAFR,CAAb;AAKA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACvC,MAAGC,YAAY,CAACC,OAAb,CAAqBL,IAAI,CAACC,cAA1B,KAA6C,IAAhD,EACKG,YAAY,CAACE,OAAb,CAAqBN,IAAI,CAACC,cAA1B,EAA0CM,IAAI,CAACC,SAAL,CAAe,EAAf,CAA1C;AAEJ,MAAIC,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqBL,IAAI,CAACC,cAA1B,CAAX,CAAd;AAEA,SAAOQ,OAAP;AACH,CAPM;AASP,OAAO,MAAME,mBAAmB,GAAIC,IAAD,IAAU;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,IAAvB;AACA,MAAIH,OAAO,GAAGN,oBAAoB,EAAlC;AACAS,EAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaG,uBAAuB,EAApC;AACAN,EAAAA,OAAO,CAACO,IAAR,CAAaJ,IAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAcL,OAA1B;AACAL,EAAAA,YAAY,CAACE,OAAb,CAAqBN,IAAI,CAACC,cAA1B,EAA0CM,IAAI,CAACC,SAAL,CAAeC,OAAf,CAA1C;AACH,CAPM;AASP,OAAO,MAAMQ,mBAAmB,GAAIL,IAAD,IAAU;AACzC,MAAIH,OAAO,GAAGN,oBAAoB,EAAlC;AACA,MAAIe,WAAW,GAAGT,OAAO,CAACU,SAAR,CAAkBC,CAAC,IAAIA,CAAC,CAACC,EAAF,IAAQT,IAAI,CAACS,EAApC,CAAlB;AACAZ,EAAAA,OAAO,CAACS,WAAD,CAAP,GAAuB,EAAC,GAAGN;AAAJ,GAAvB;AACAR,EAAAA,YAAY,CAACE,OAAb,CAAqBN,IAAI,CAACC,cAA1B,EAA0CM,IAAI,CAACC,SAAL,CAAeC,OAAf,CAA1C;AACH,CALM;AAOP,OAAO,MAAMa,mBAAmB,GAAID,EAAD,IAAQ;AACvC,MAAIZ,OAAO,GAAGN,oBAAoB,EAAlC;AACAM,EAAAA,OAAO,GAAGA,OAAO,CAACc,MAAR,CAAeH,CAAC,IAAIA,CAAC,CAACC,EAAF,IAAQA,EAA5B,CAAV;AACAjB,EAAAA,YAAY,CAACE,OAAb,CAAqBN,IAAI,CAACC,cAA1B,EAA0CM,IAAI,CAACC,SAAL,CAAeC,OAAf,CAA1C;AACH,CAJM;AAMP,OAAO,MAAMM,uBAAuB,GAAG,MAAM;AACzC,MAAGX,YAAY,CAACC,OAAb,CAAqBL,IAAI,CAACE,eAA1B,KAA8C,IAAjD,EACIE,YAAY,CAACE,OAAb,CAAqBN,IAAI,CAACE,eAA1B,EAA2C,GAA3C;AAEJ,MAAImB,EAAE,GAAGG,QAAQ,CAACpB,YAAY,CAACC,OAAb,CAAqBL,IAAI,CAACE,eAA1B,CAAD,CAAjB;AACAE,EAAAA,YAAY,CAACE,OAAb,CAAqBN,IAAI,CAACE,eAA1B,EAA2C,CAAC,EAAEmB,EAAH,EAAOI,QAAP,EAA3C;AAEA,SAAOJ,EAAP;AACH,CARM","sourcesContent":["const KEYS = {\r\n    studentRecords: 'studentRecords',\r\n    studentRecordId: 'studentRecordId'\r\n}\r\n\r\nexport const getAllStudentRecords = () => {\r\n   if(localStorage.getItem(KEYS.studentRecords) == null)\r\n        localStorage.setItem(KEYS.studentRecords, JSON.stringify([]))\r\n    \r\n    let records = JSON.parse(localStorage.getItem(KEYS.studentRecords))\r\n\r\n    return records;\r\n}\r\n\r\nexport const insertStudentRecord = (data) => {\r\n    console.log(\"data: \" + data)\r\n    let records = getAllStudentRecords()\r\n    data['id'] = generateStudentRecordId()\r\n    records.push(data)\r\n    console.log(\"records: \" + records);\r\n    localStorage.setItem(KEYS.studentRecords, JSON.stringify(records))\r\n}\r\n\r\nexport const updateStudentRecord = (data) => {\r\n    let records = getAllStudentRecords()\r\n    let recordIndex = records.findIndex(x => x.id == data.id)\r\n    records[recordIndex] = {...data}\r\n    localStorage.setItem(KEYS.studentRecords, JSON.stringify(records))\r\n}\r\n\r\nexport const deleteStudentRecord = (id) => {\r\n    let records = getAllStudentRecords()\r\n    records = records.filter(x => x.id != id)\r\n    localStorage.setItem(KEYS.studentRecords, JSON.stringify(records))\r\n}\r\n\r\nexport const generateStudentRecordId = () => {\r\n    if(localStorage.getItem(KEYS.studentRecordId) == null)\r\n        localStorage.setItem(KEYS.studentRecordId, '0')\r\n\r\n    let id = parseInt(localStorage.getItem(KEYS.studentRecordId))\r\n    localStorage.setItem(KEYS.studentRecordId, (++id).toString())\r\n    \r\n    return id;\r\n}"]},"metadata":{},"sourceType":"module"}