{"ast":null,"code":"var _jsxFileName = \"C:\\\\Aks\\\\projects\\\\student-records\\\\src\\\\components\\\\SRPage\\\\StudentRecordPage.js\",\n    _s = $RefreshSig$();\n\nimport './StudentRecordPage.scss';\nimport '@material/react-layout-grid/index.scss';\nimport { useState } from 'react';\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\nimport { Table, TableHead, TableBody, TableCell, TableRow, List } from '@material-ui/core';\nimport { Paper, makeStyles, Divider } from '@material-ui/core';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport StudentRecordForm from '../SRForm/StudentRecordForm';\nimport ActionButton from '../../components/controls/ActionButton';\nimport Popup from '../Popup';\nimport ConfirmDialog from '../ConfirmDialog';\nimport { connect } from 'react-redux';\nimport { buyCake } from '../../redux/cake/cakeActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  PageContent: {\n    width: '80%',\n    margin: '0 auto',\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction StudentRecordPage(props) {\n  _s();\n\n  console.log(\"Buy Cake: \" + props.buyCake);\n  const classes = useStyles();\n  const [records, setRecords] = useState([]);\n  const [studentRecordForEdit, setStudentRecordForEdit] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [confirmDialog, setConfirmDialog] = useState({\n    isOpen: false,\n    title: '',\n    subTitle: ''\n  });\n\n  const openInPopup = item => {\n    setStudentRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const onDelete = id => {\n    setConfirmDialog({ ...confirmDialog,\n      isOpen: false\n    });\n    handleRemoveItem(id);\n  };\n\n  const saveStudentRecordHandler = studentRecord => {\n    setRecords([...records, studentRecord]);\n  };\n\n  const updateStudentRecordHandler = studentRecord => {\n    let newArr = [...records];\n    let index = records.findIndex(x => x.rollNo === studentRecord.rollNo);\n    newArr[index] = studentRecord;\n    setRecords(newArr);\n    setOpenPopup(false);\n  };\n\n  const handleRemoveItem = id => {\n    setRecords(records.filter(item => item.rollNo !== id));\n  };\n\n  const handleButtonClick = () => {\n    let x = props.buyCake();\n    alert(x.buyCake);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.PageContent,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \"Simple Student Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Number of cakes - \", props.numOfCakes, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.buyCake,\n      children: \"Buy Cake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Cell, {\n          columns: 5,\n          children: /*#__PURE__*/_jsxDEV(StudentRecordForm, {\n            saveStudentRecord: saveStudentRecordHandler,\n            studentRecordForEdit: studentRecordForEdit,\n            source: \"newRecord\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Cell, {\n          columns: 7,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"FullName\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Roll No.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Student Class\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Total Subjects\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Age\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \" \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \" \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: records.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                  sx: {\n                    '&:last-child td, &:last-child th': {\n                      border: 0\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: row.fullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.rollNo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.studentClass\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.totalSubjects\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.age\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(ActionButton, {\n                      color: \"primary\",\n                      onClick: () => openInPopup(row),\n                      children: /*#__PURE__*/_jsxDEV(EditOutlinedIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(ActionButton, {\n                      color: \"secondary\",\n                      onClick: () => {\n                        setConfirmDialog({\n                          isOpen: true,\n                          title: \"Delete Student Record\",\n                          subTitle: \"Do you want to delete Student Record?\",\n                          onConfirm: () => {\n                            onDelete(row.rollNo);\n                          }\n                        });\n                      },\n                      children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 120,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 45\n                  }, this)]\n                }, row.rollNo, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Popup, {\n              title: \"Edit Student Record\",\n              openPopup: openPopup,\n              setOpenPopup: setOpenPopup,\n              children: /*#__PURE__*/_jsxDEV(StudentRecordForm, {\n                saveStudentRecord: updateStudentRecordHandler,\n                studentRecordForEdit: studentRecordForEdit,\n                source: \"editRecord\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n              confirmDialog: confirmDialog,\n              setConfirmDialog: setConfirmDialog\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StudentRecordPage, \"yCoL6ettKHVajzvKXEuG0pmGQ58=\", false, function () {\n  return [useStyles];\n});\n\n_c = StudentRecordPage;\n\nconst mapStateToProps = state => {\n  return {\n    numOfCakes: state.numOfCakes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    buyCake: () => dispatch(buyCake())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentRecordPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentRecordPage\");","map":{"version":3,"sources":["C:/Aks/projects/student-records/src/components/SRPage/StudentRecordPage.js"],"names":["useState","Cell","Grid","Row","Table","TableHead","TableBody","TableCell","TableRow","List","Paper","makeStyles","Divider","EditOutlinedIcon","CloseIcon","StudentRecordForm","ActionButton","Popup","ConfirmDialog","connect","buyCake","useStyles","theme","PageContent","width","margin","padding","spacing","StudentRecordPage","props","console","log","classes","records","setRecords","studentRecordForEdit","setStudentRecordForEdit","openPopup","setOpenPopup","confirmDialog","setConfirmDialog","isOpen","title","subTitle","openInPopup","item","onDelete","id","handleRemoveItem","saveStudentRecordHandler","studentRecord","updateStudentRecordHandler","newArr","index","findIndex","x","rollNo","filter","handleButtonClick","alert","numOfCakes","map","row","border","fullName","studentClass","totalSubjects","age","onConfirm","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import './StudentRecordPage.scss';\r\nimport '@material/react-layout-grid/index.scss';\r\nimport { useState} from 'react';\r\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\r\nimport { Table, TableHead, TableBody, TableCell, TableRow, List } from '@material-ui/core';\r\nimport {Paper, makeStyles, Divider} from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StudentRecordForm from '../SRForm/StudentRecordForm';\r\nimport ActionButton from '../../components/controls/ActionButton';\r\nimport Popup from '../Popup';\r\nimport ConfirmDialog from '../ConfirmDialog';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { buyCake } from '../../redux/cake/cakeActions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    PageContent: {\r\n        width:'80%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3)\r\n    }\r\n}))\r\n\r\nfunction StudentRecordPage(props){\r\n    console.log(\"Buy Cake: \" + props.buyCake);\r\n\r\n    const classes = useStyles();\r\n    const [records, setRecords] = useState([])\r\n    const [studentRecordForEdit, setStudentRecordForEdit] = useState(null);\r\n    const [openPopup, setOpenPopup] = useState(false);    \r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen:false, title:'', subTitle:''});\r\n\r\n    const openInPopup = (item) => {      \r\n        setStudentRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog, isOpen:false\r\n        })\r\n        handleRemoveItem(id);        \r\n    }\r\n\r\n    const saveStudentRecordHandler = (studentRecord) => {\r\n        setRecords([...records, studentRecord]);\r\n    }\r\n\r\n    const updateStudentRecordHandler = (studentRecord) => {\r\n        let newArr = [...records]\r\n        let index = records.findIndex(x => x.rollNo ===studentRecord.rollNo);\r\n        newArr[index] = studentRecord;\r\n        setRecords(newArr)\r\n        setOpenPopup(false)\r\n    }\r\n\r\n    const handleRemoveItem = (id) => {\r\n        setRecords(records.filter(item => item.rollNo !== id));\r\n    };\r\n\r\n    const handleButtonClick = () => {\r\n        let x =props.buyCake();\r\n        alert(x.buyCake)\r\n    }\r\n\r\n    return(\r\n        <Paper className={classes.PageContent}>\r\n            <p className=\"title\">Simple Student Records</p>\r\n            <h2>Number of cakes - {props.numOfCakes} </h2>\r\n            <button onClick={props.buyCake}>Buy Cake</button>\r\n            <Divider/>\r\n            <Grid>\r\n                <Row>\r\n                    <Cell columns={5}>\r\n                        <StudentRecordForm saveStudentRecord={saveStudentRecordHandler}\r\n                                            studentRecordForEdit={studentRecordForEdit}\r\n                                            source=\"newRecord\" />\r\n                    </Cell>\r\n                    <Cell columns={7}>\r\n                        <div>\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>FullName</TableCell>\r\n                                        <TableCell align=\"right\">Roll No.</TableCell>\r\n                                        <TableCell align=\"right\">Student Class</TableCell>\r\n                                        <TableCell align=\"right\">Total Subjects</TableCell>\r\n                                        <TableCell align=\"right\">Age</TableCell>\r\n                                        <TableCell> </TableCell>\r\n                                        <TableCell> </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {records.map((row) => (\r\n                                        <TableRow key={row.rollNo} sx={{ '&:last-child td, &:last-child th': { border: 0 } }} >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {row.fullName}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.rollNo}</TableCell>\r\n                                            <TableCell align=\"right\">{row.studentClass}</TableCell>\r\n                                            <TableCell align=\"right\">{row.totalSubjects}</TableCell>\r\n                                            <TableCell align=\"right\">{row.age}</TableCell>\r\n                                            <TableCell>\r\n                                                <ActionButton\r\n                                                    color = \"primary\"\r\n                                                    onClick = {() => openInPopup(row)} >\r\n                                                    <EditOutlinedIcon fontSize=\"small\"/>\r\n                                                </ActionButton>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <ActionButton\r\n                                                    color = \"secondary\"\r\n                                                    onClick={()=> {setConfirmDialog({\r\n                                                        isOpen:true,\r\n                                                        title:\"Delete Student Record\",\r\n                                                        subTitle:\"Do you want to delete Student Record?\",\r\n                                                        onConfirm:()=>{onDelete(row.rollNo)}\r\n                                                    })}}>\r\n                                                    <CloseIcon fontSize=\"small\"/>\r\n                                                </ActionButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Popup title=\"Edit Student Record\" \r\n                                    openPopup = {openPopup} \r\n                                    setOpenPopup = {setOpenPopup} >\r\n                                <StudentRecordForm saveStudentRecord={updateStudentRecordHandler}\r\n                                                   studentRecordForEdit={studentRecordForEdit} \r\n                                                   source=\"editRecord\"/>\r\n                            </Popup>\r\n                            <ConfirmDialog confirmDialog= {confirmDialog}\r\n                                            setConfirmDialog= {setConfirmDialog}/>\r\n                        </div>\r\n                    </Cell>\r\n                </Row>\r\n            </Grid>\r\n            \r\n        </Paper>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        numOfCakes: state.numOfCakes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => { \r\n    return {\r\n        buyCake: () => dispatch(buyCake())\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StudentRecordPage)"]},"metadata":{},"sourceType":"module"}