{"ast":null,"code":"var _jsxFileName = \"C:\\\\Aks\\\\projects\\\\Final\\\\student-records\\\\src\\\\components\\\\SRForm\\\\StudentRecordForm.js\",\n    _s = $RefreshSig$();\n\nimport './StudentRecordForm.scss';\nimport { useForm, Form } from '../useForm';\nimport Input from '../controls/Input';\nimport Button from '../../components/controls/Button';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initializeFValues = {\n  fullName: '',\n  rollNo: '',\n  studentClass: '',\n  totalSubjects: '',\n  age: ''\n};\n\nconst StudentRecordForm = props => {\n  _s();\n\n  const {\n    studentRecordForEdit\n  } = props;\n\n  const validate = function () {\n    let fieldValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : values;\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n    if ('rollNo' in fieldValues) temp.rollNo = fieldValues.rollNo ? \"\" : \"This field is required.\";\n    if ('studentClass' in fieldValues) temp.studentClass = fieldValues.studentClass ? \"\" : \"This field is required.\";\n    if ('totalSubjects' in fieldValues) temp.totalSubjects = fieldValues.totalSubjects ? \"\" : \"This field is required.\";\n    if ('age' in fieldValues) temp.age = fieldValues.age ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    restForm\n  } = useForm(initializeFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      props.saveStudentRecord(values);\n      restForm();\n    }\n  };\n\n  useEffect(() => {\n    if (studentRecordForEdit != null) {\n      setValues({ ...studentRecordForEdit\n      });\n    }\n  }, [studentRecordForEdit]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      name: \"fullName\",\n      label: \"Full Name:\",\n      value: values.fullName,\n      error: errors.fullName,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"rollNo\",\n      label: \"Rollno:\",\n      value: values.rollNo,\n      error: errors.rollNo,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"studentClass\",\n      label: \"Student Class:\",\n      value: values.studentClass,\n      error: errors.studentClass,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"totalSubjects\",\n      label: \"Total Subjects:\",\n      value: values.totalSubjects,\n      error: errors.totalSubjects,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      name: \"age\",\n      label: \"Age:\",\n      value: values.age,\n      error: errors.age,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Submit\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StudentRecordForm, \"kHtegbWylwMklPf15KL6iW/GwL0=\", false, function () {\n  return [useForm];\n});\n\n_c = StudentRecordForm;\nexport default StudentRecordForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentRecordForm\");","map":{"version":3,"sources":["C:/Aks/projects/Final/student-records/src/components/SRForm/StudentRecordForm.js"],"names":["useForm","Form","Input","Button","useEffect","initializeFValues","fullName","rollNo","studentClass","totalSubjects","age","StudentRecordForm","props","studentRecordForEdit","validate","fieldValues","values","temp","errors","setErrors","Object","every","x","setValues","handleInputChange","restForm","handleSubmit","e","preventDefault","saveStudentRecord"],"mappings":"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","sourcesContent":["import './StudentRecordForm.scss';\r\nimport {useForm, Form} from '../useForm';\r\nimport Input from '../controls/Input';\r\nimport Button from '../../components/controls/Button';\r\nimport { useEffect} from 'react';\r\n\r\nconst initializeFValues = {\r\n    fullName: '',\r\n    rollNo: '',\r\n    studentClass: '',\r\n    totalSubjects: '',\r\n    age: ''\r\n}\r\n\r\nconst StudentRecordForm = (props) => {\r\n    const {studentRecordForEdit} = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = {...errors}\r\n        if('fullName' in fieldValues)\r\n            temp.fullName= fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if('rollNo' in fieldValues)\r\n            temp.rollNo= fieldValues.rollNo ? \"\": \"This field is required.\"\r\n        if('studentClass' in fieldValues)\r\n            temp.studentClass= fieldValues.studentClass ? \"\": \"This field is required.\"\r\n        if('totalSubjects' in fieldValues)\r\n            temp.totalSubjects= fieldValues.totalSubjects ? \"\": \"This field is required.\"\r\n        if('age' in fieldValues)\r\n            temp.age= fieldValues.age ? \"\": \"This field is required.\"\r\n        \r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if(fieldValues == values)\r\n            return Object.values(temp).every(x=> x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        restForm\r\n    } = useForm(initializeFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if(validate()){\r\n            props.saveStudentRecord(values);\r\n            restForm();\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(studentRecordForEdit != null){\r\n                setValues({...studentRecordForEdit\r\n            })\r\n        }\r\n           \r\n    }, [studentRecordForEdit])\r\n\r\n    return(\r\n        <Form onSubmit = {handleSubmit}>\r\n            <Input\r\n                name= \"fullName\"\r\n                label= \"Full Name:\"\r\n                value= {values.fullName}\r\n                error= {errors.fullName}\r\n                onChange= {handleInputChange} />\r\n\r\n            <Input\r\n                name= \"rollNo\"\r\n                label= \"Rollno:\"\r\n                value= {values.rollNo}\r\n                error= {errors.rollNo}\r\n                onChange= {handleInputChange} />\r\n                \r\n            <Input\r\n                name= \"studentClass\"\r\n                label= \"Student Class:\"\r\n                value= {values.studentClass}\r\n                error= {errors.studentClass}\r\n                onChange= {handleInputChange} />\r\n\r\n            <Input\r\n                name= \"totalSubjects\"\r\n                label= \"Total Subjects:\"\r\n                value= {values.totalSubjects}\r\n                error= {errors.totalSubjects}\r\n                onChange= {handleInputChange} />\r\n\r\n            <Input\r\n                name= \"age\"\r\n                label= \"Age:\"\r\n                value= {values.age}\r\n                error= {errors.age}\r\n                onChange= {handleInputChange} />\r\n\r\n            <div>\r\n                <Button text = \"Submit\"  type=\"submit\" />\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default StudentRecordForm;"]},"metadata":{},"sourceType":"module"}